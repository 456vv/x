// Code generated by 'yaegi extract github.com/456vv/vconnpool/v2'. DO NOT EDIT.

package yaegi_lib

import (
	"context"
	"github.com/456vv/vconnpool/v2"
	"net"
	"reflect"
	"time"
)

func init() {
	Symbols["github.com/456vv/vconnpool/v2/vconnpool"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ParseAddr": reflect.ValueOf(vconnpool.ParseAddr),

		// type definitions
		"Conn":     reflect.ValueOf((*vconnpool.Conn)(nil)),
		"ConnPool": reflect.ValueOf((*vconnpool.ConnPool)(nil)),
		"Dialer":   reflect.ValueOf((*vconnpool.Dialer)(nil)),

		// interface wrapper definitions
		"_Conn":   reflect.ValueOf((*_github_com_456vv_vconnpool_v2_Conn)(nil)),
		"_Dialer": reflect.ValueOf((*_github_com_456vv_vconnpool_v2_Dialer)(nil)),
	}
}

// _github_com_456vv_vconnpool_v2_Conn is an interface wrapper for Conn type
type _github_com_456vv_vconnpool_v2_Conn struct {
	IValue            interface{}
	WClose            func() error
	WDiscard          func() error
	WIsReuseConn      func() bool
	WLocalAddr        func() net.Addr
	WRawConn          func() net.Conn
	WRead             func(b []byte) (n int, err error)
	WRemoteAddr       func() net.Addr
	WSetDeadline      func(t time.Time) error
	WSetReadDeadline  func(t time.Time) error
	WSetWriteDeadline func(t time.Time) error
	WWrite            func(b []byte) (n int, err error)
}

func (W _github_com_456vv_vconnpool_v2_Conn) Close() error {
	return W.WClose()
}
func (W _github_com_456vv_vconnpool_v2_Conn) Discard() error {
	return W.WDiscard()
}
func (W _github_com_456vv_vconnpool_v2_Conn) IsReuseConn() bool {
	return W.WIsReuseConn()
}
func (W _github_com_456vv_vconnpool_v2_Conn) LocalAddr() net.Addr {
	return W.WLocalAddr()
}
func (W _github_com_456vv_vconnpool_v2_Conn) RawConn() net.Conn {
	return W.WRawConn()
}
func (W _github_com_456vv_vconnpool_v2_Conn) Read(b []byte) (n int, err error) {
	return W.WRead(b)
}
func (W _github_com_456vv_vconnpool_v2_Conn) RemoteAddr() net.Addr {
	return W.WRemoteAddr()
}
func (W _github_com_456vv_vconnpool_v2_Conn) SetDeadline(t time.Time) error {
	return W.WSetDeadline(t)
}
func (W _github_com_456vv_vconnpool_v2_Conn) SetReadDeadline(t time.Time) error {
	return W.WSetReadDeadline(t)
}
func (W _github_com_456vv_vconnpool_v2_Conn) SetWriteDeadline(t time.Time) error {
	return W.WSetWriteDeadline(t)
}
func (W _github_com_456vv_vconnpool_v2_Conn) Write(b []byte) (n int, err error) {
	return W.WWrite(b)
}

// _github_com_456vv_vconnpool_v2_Dialer is an interface wrapper for Dialer type
type _github_com_456vv_vconnpool_v2_Dialer struct {
	IValue       interface{}
	WDial        func(network string, address string) (net.Conn, error)
	WDialContext func(ctx context.Context, network string, address string) (net.Conn, error)
}

func (W _github_com_456vv_vconnpool_v2_Dialer) Dial(network string, address string) (net.Conn, error) {
	return W.WDial(network, address)
}
func (W _github_com_456vv_vconnpool_v2_Dialer) DialContext(ctx context.Context, network string, address string) (net.Conn, error) {
	return W.WDialContext(ctx, network, address)
}
