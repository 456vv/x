// Code generated by 'yaegi extract github.com/mattn/go-sqlite3'. DO NOT EDIT.

//go:build yaegi_lib && sqlite3
// +build yaegi_lib,sqlite3

package yaegi_lib

import (
	"github.com/mattn/go-sqlite3"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/mattn/go-sqlite3/sqlite3"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CryptEncoderSHA1":                 reflect.ValueOf(sqlite3.CryptEncoderSHA1),
		"CryptEncoderSHA256":               reflect.ValueOf(sqlite3.CryptEncoderSHA256),
		"CryptEncoderSHA384":               reflect.ValueOf(sqlite3.CryptEncoderSHA384),
		"CryptEncoderSHA512":               reflect.ValueOf(sqlite3.CryptEncoderSHA512),
		"CryptEncoderSSHA1":                reflect.ValueOf(sqlite3.CryptEncoderSSHA1),
		"CryptEncoderSSHA256":              reflect.ValueOf(sqlite3.CryptEncoderSSHA256),
		"CryptEncoderSSHA384":              reflect.ValueOf(sqlite3.CryptEncoderSSHA384),
		"CryptEncoderSSHA512":              reflect.ValueOf(sqlite3.CryptEncoderSSHA512),
		"ErrAbort":                         reflect.ValueOf(&sqlite3.ErrAbort).Elem(),
		"ErrAbortRollback":                 reflect.ValueOf(&sqlite3.ErrAbortRollback).Elem(),
		"ErrAuth":                          reflect.ValueOf(&sqlite3.ErrAuth).Elem(),
		"ErrBusy":                          reflect.ValueOf(&sqlite3.ErrBusy).Elem(),
		"ErrBusyRecovery":                  reflect.ValueOf(&sqlite3.ErrBusyRecovery).Elem(),
		"ErrBusySnapshot":                  reflect.ValueOf(&sqlite3.ErrBusySnapshot).Elem(),
		"ErrCantOpen":                      reflect.ValueOf(&sqlite3.ErrCantOpen).Elem(),
		"ErrCantOpenConvPath":              reflect.ValueOf(&sqlite3.ErrCantOpenConvPath).Elem(),
		"ErrCantOpenFullPath":              reflect.ValueOf(&sqlite3.ErrCantOpenFullPath).Elem(),
		"ErrCantOpenIsDir":                 reflect.ValueOf(&sqlite3.ErrCantOpenIsDir).Elem(),
		"ErrCantOpenNoTempDir":             reflect.ValueOf(&sqlite3.ErrCantOpenNoTempDir).Elem(),
		"ErrConstraint":                    reflect.ValueOf(&sqlite3.ErrConstraint).Elem(),
		"ErrConstraintCheck":               reflect.ValueOf(&sqlite3.ErrConstraintCheck).Elem(),
		"ErrConstraintCommitHook":          reflect.ValueOf(&sqlite3.ErrConstraintCommitHook).Elem(),
		"ErrConstraintForeignKey":          reflect.ValueOf(&sqlite3.ErrConstraintForeignKey).Elem(),
		"ErrConstraintFunction":            reflect.ValueOf(&sqlite3.ErrConstraintFunction).Elem(),
		"ErrConstraintNotNull":             reflect.ValueOf(&sqlite3.ErrConstraintNotNull).Elem(),
		"ErrConstraintPrimaryKey":          reflect.ValueOf(&sqlite3.ErrConstraintPrimaryKey).Elem(),
		"ErrConstraintRowID":               reflect.ValueOf(&sqlite3.ErrConstraintRowID).Elem(),
		"ErrConstraintTrigger":             reflect.ValueOf(&sqlite3.ErrConstraintTrigger).Elem(),
		"ErrConstraintUnique":              reflect.ValueOf(&sqlite3.ErrConstraintUnique).Elem(),
		"ErrConstraintVTab":                reflect.ValueOf(&sqlite3.ErrConstraintVTab).Elem(),
		"ErrCorrupt":                       reflect.ValueOf(&sqlite3.ErrCorrupt).Elem(),
		"ErrCorruptVTab":                   reflect.ValueOf(&sqlite3.ErrCorruptVTab).Elem(),
		"ErrEmpty":                         reflect.ValueOf(&sqlite3.ErrEmpty).Elem(),
		"ErrError":                         reflect.ValueOf(&sqlite3.ErrError).Elem(),
		"ErrFormat":                        reflect.ValueOf(&sqlite3.ErrFormat).Elem(),
		"ErrFull":                          reflect.ValueOf(&sqlite3.ErrFull).Elem(),
		"ErrInternal":                      reflect.ValueOf(&sqlite3.ErrInternal).Elem(),
		"ErrInterrupt":                     reflect.ValueOf(&sqlite3.ErrInterrupt).Elem(),
		"ErrIoErr":                         reflect.ValueOf(&sqlite3.ErrIoErr).Elem(),
		"ErrIoErrAccess":                   reflect.ValueOf(&sqlite3.ErrIoErrAccess).Elem(),
		"ErrIoErrBlocked":                  reflect.ValueOf(&sqlite3.ErrIoErrBlocked).Elem(),
		"ErrIoErrCheckReservedLock":        reflect.ValueOf(&sqlite3.ErrIoErrCheckReservedLock).Elem(),
		"ErrIoErrClose":                    reflect.ValueOf(&sqlite3.ErrIoErrClose).Elem(),
		"ErrIoErrConvPath":                 reflect.ValueOf(&sqlite3.ErrIoErrConvPath).Elem(),
		"ErrIoErrDelete":                   reflect.ValueOf(&sqlite3.ErrIoErrDelete).Elem(),
		"ErrIoErrDeleteNoent":              reflect.ValueOf(&sqlite3.ErrIoErrDeleteNoent).Elem(),
		"ErrIoErrDirClose":                 reflect.ValueOf(&sqlite3.ErrIoErrDirClose).Elem(),
		"ErrIoErrDirFsync":                 reflect.ValueOf(&sqlite3.ErrIoErrDirFsync).Elem(),
		"ErrIoErrFstat":                    reflect.ValueOf(&sqlite3.ErrIoErrFstat).Elem(),
		"ErrIoErrFsync":                    reflect.ValueOf(&sqlite3.ErrIoErrFsync).Elem(),
		"ErrIoErrGetTempPath":              reflect.ValueOf(&sqlite3.ErrIoErrGetTempPath).Elem(),
		"ErrIoErrLock":                     reflect.ValueOf(&sqlite3.ErrIoErrLock).Elem(),
		"ErrIoErrMMap":                     reflect.ValueOf(&sqlite3.ErrIoErrMMap).Elem(),
		"ErrIoErrNoMem":                    reflect.ValueOf(&sqlite3.ErrIoErrNoMem).Elem(),
		"ErrIoErrRDlock":                   reflect.ValueOf(&sqlite3.ErrIoErrRDlock).Elem(),
		"ErrIoErrRead":                     reflect.ValueOf(&sqlite3.ErrIoErrRead).Elem(),
		"ErrIoErrSHMLock":                  reflect.ValueOf(&sqlite3.ErrIoErrSHMLock).Elem(),
		"ErrIoErrSHMMap":                   reflect.ValueOf(&sqlite3.ErrIoErrSHMMap).Elem(),
		"ErrIoErrSHMOpen":                  reflect.ValueOf(&sqlite3.ErrIoErrSHMOpen).Elem(),
		"ErrIoErrSHMSize":                  reflect.ValueOf(&sqlite3.ErrIoErrSHMSize).Elem(),
		"ErrIoErrSeek":                     reflect.ValueOf(&sqlite3.ErrIoErrSeek).Elem(),
		"ErrIoErrShortRead":                reflect.ValueOf(&sqlite3.ErrIoErrShortRead).Elem(),
		"ErrIoErrTruncate":                 reflect.ValueOf(&sqlite3.ErrIoErrTruncate).Elem(),
		"ErrIoErrUnlock":                   reflect.ValueOf(&sqlite3.ErrIoErrUnlock).Elem(),
		"ErrIoErrWrite":                    reflect.ValueOf(&sqlite3.ErrIoErrWrite).Elem(),
		"ErrLocked":                        reflect.ValueOf(&sqlite3.ErrLocked).Elem(),
		"ErrLockedSharedCache":             reflect.ValueOf(&sqlite3.ErrLockedSharedCache).Elem(),
		"ErrMismatch":                      reflect.ValueOf(&sqlite3.ErrMismatch).Elem(),
		"ErrMisuse":                        reflect.ValueOf(&sqlite3.ErrMisuse).Elem(),
		"ErrNoLFS":                         reflect.ValueOf(&sqlite3.ErrNoLFS).Elem(),
		"ErrNoMask":                        reflect.ValueOf(sqlite3.ErrNoMask),
		"ErrNomem":                         reflect.ValueOf(&sqlite3.ErrNomem).Elem(),
		"ErrNotADB":                        reflect.ValueOf(&sqlite3.ErrNotADB).Elem(),
		"ErrNotFound":                      reflect.ValueOf(&sqlite3.ErrNotFound).Elem(),
		"ErrNotice":                        reflect.ValueOf(&sqlite3.ErrNotice).Elem(),
		"ErrNoticeRecoverRollback":         reflect.ValueOf(&sqlite3.ErrNoticeRecoverRollback).Elem(),
		"ErrNoticeRecoverWAL":              reflect.ValueOf(&sqlite3.ErrNoticeRecoverWAL).Elem(),
		"ErrPerm":                          reflect.ValueOf(&sqlite3.ErrPerm).Elem(),
		"ErrProtocol":                      reflect.ValueOf(&sqlite3.ErrProtocol).Elem(),
		"ErrRange":                         reflect.ValueOf(&sqlite3.ErrRange).Elem(),
		"ErrReadonly":                      reflect.ValueOf(&sqlite3.ErrReadonly).Elem(),
		"ErrReadonlyCantLock":              reflect.ValueOf(&sqlite3.ErrReadonlyCantLock).Elem(),
		"ErrReadonlyDbMoved":               reflect.ValueOf(&sqlite3.ErrReadonlyDbMoved).Elem(),
		"ErrReadonlyRecovery":              reflect.ValueOf(&sqlite3.ErrReadonlyRecovery).Elem(),
		"ErrReadonlyRollback":              reflect.ValueOf(&sqlite3.ErrReadonlyRollback).Elem(),
		"ErrSchema":                        reflect.ValueOf(&sqlite3.ErrSchema).Elem(),
		"ErrTooBig":                        reflect.ValueOf(&sqlite3.ErrTooBig).Elem(),
		"ErrWarning":                       reflect.ValueOf(&sqlite3.ErrWarning).Elem(),
		"ErrWarningAutoIndex":              reflect.ValueOf(&sqlite3.ErrWarningAutoIndex).Elem(),
		"SQLITE_ALTER_TABLE":               reflect.ValueOf(constant.MakeFromLiteral("26", token.INT, 0)),
		"SQLITE_ANALYZE":                   reflect.ValueOf(constant.MakeFromLiteral("28", token.INT, 0)),
		"SQLITE_ATTACH":                    reflect.ValueOf(constant.MakeFromLiteral("24", token.INT, 0)),
		"SQLITE_BLOB":                      reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"SQLITE_BOOL":                      reflect.ValueOf(constant.MakeFromLiteral("6", token.INT, 0)),
		"SQLITE_COPY":                      reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"SQLITE_CREATE_INDEX":              reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"SQLITE_CREATE_TABLE":              reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"SQLITE_CREATE_TEMP_INDEX":         reflect.ValueOf(constant.MakeFromLiteral("3", token.INT, 0)),
		"SQLITE_CREATE_TEMP_TABLE":         reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"SQLITE_CREATE_TEMP_TRIGGER":       reflect.ValueOf(constant.MakeFromLiteral("5", token.INT, 0)),
		"SQLITE_CREATE_TEMP_VIEW":          reflect.ValueOf(constant.MakeFromLiteral("6", token.INT, 0)),
		"SQLITE_CREATE_TRIGGER":            reflect.ValueOf(constant.MakeFromLiteral("7", token.INT, 0)),
		"SQLITE_CREATE_VIEW":               reflect.ValueOf(constant.MakeFromLiteral("8", token.INT, 0)),
		"SQLITE_CREATE_VTABLE":             reflect.ValueOf(constant.MakeFromLiteral("29", token.INT, 0)),
		"SQLITE_DELETE":                    reflect.ValueOf(constant.MakeFromLiteral("9", token.INT, 0)),
		"SQLITE_DENY":                      reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"SQLITE_DETACH":                    reflect.ValueOf(constant.MakeFromLiteral("25", token.INT, 0)),
		"SQLITE_DROP_INDEX":                reflect.ValueOf(constant.MakeFromLiteral("10", token.INT, 0)),
		"SQLITE_DROP_TABLE":                reflect.ValueOf(constant.MakeFromLiteral("11", token.INT, 0)),
		"SQLITE_DROP_TEMP_INDEX":           reflect.ValueOf(constant.MakeFromLiteral("12", token.INT, 0)),
		"SQLITE_DROP_TEMP_TABLE":           reflect.ValueOf(constant.MakeFromLiteral("13", token.INT, 0)),
		"SQLITE_DROP_TEMP_TRIGGER":         reflect.ValueOf(constant.MakeFromLiteral("14", token.INT, 0)),
		"SQLITE_DROP_TEMP_VIEW":            reflect.ValueOf(constant.MakeFromLiteral("15", token.INT, 0)),
		"SQLITE_DROP_TRIGGER":              reflect.ValueOf(constant.MakeFromLiteral("16", token.INT, 0)),
		"SQLITE_DROP_VIEW":                 reflect.ValueOf(constant.MakeFromLiteral("17", token.INT, 0)),
		"SQLITE_DROP_VTABLE":               reflect.ValueOf(constant.MakeFromLiteral("30", token.INT, 0)),
		"SQLITE_FUNCTION":                  reflect.ValueOf(constant.MakeFromLiteral("31", token.INT, 0)),
		"SQLITE_IGNORE":                    reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"SQLITE_INSERT":                    reflect.ValueOf(constant.MakeFromLiteral("18", token.INT, 0)),
		"SQLITE_INTEGER":                   reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"SQLITE_LIMIT_ATTACHED":            reflect.ValueOf(constant.MakeFromLiteral("7", token.INT, 0)),
		"SQLITE_LIMIT_COLUMN":              reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"SQLITE_LIMIT_COMPOUND_SELECT":     reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"SQLITE_LIMIT_EXPR_DEPTH":          reflect.ValueOf(constant.MakeFromLiteral("3", token.INT, 0)),
		"SQLITE_LIMIT_FUNCTION_ARG":        reflect.ValueOf(constant.MakeFromLiteral("6", token.INT, 0)),
		"SQLITE_LIMIT_LENGTH":              reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"SQLITE_LIMIT_LIKE_PATTERN_LENGTH": reflect.ValueOf(constant.MakeFromLiteral("8", token.INT, 0)),
		"SQLITE_LIMIT_SQL_LENGTH":          reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"SQLITE_LIMIT_TRIGGER_DEPTH":       reflect.ValueOf(constant.MakeFromLiteral("10", token.INT, 0)),
		"SQLITE_LIMIT_VARIABLE_NUMBER":     reflect.ValueOf(constant.MakeFromLiteral("9", token.INT, 0)),
		"SQLITE_LIMIT_VDBE_OP":             reflect.ValueOf(constant.MakeFromLiteral("5", token.INT, 0)),
		"SQLITE_LIMIT_WORKER_THREADS":      reflect.ValueOf(constant.MakeFromLiteral("11", token.INT, 0)),
		"SQLITE_NULL":                      reflect.ValueOf(constant.MakeFromLiteral("7", token.INT, 0)),
		"SQLITE_NUMERIC":                   reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"SQLITE_OK":                        reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"SQLITE_PRAGMA":                    reflect.ValueOf(constant.MakeFromLiteral("19", token.INT, 0)),
		"SQLITE_READ":                      reflect.ValueOf(constant.MakeFromLiteral("20", token.INT, 0)),
		"SQLITE_REAL":                      reflect.ValueOf(constant.MakeFromLiteral("3", token.INT, 0)),
		"SQLITE_REINDEX":                   reflect.ValueOf(constant.MakeFromLiteral("27", token.INT, 0)),
		"SQLITE_SAVEPOINT":                 reflect.ValueOf(constant.MakeFromLiteral("32", token.INT, 0)),
		"SQLITE_SELECT":                    reflect.ValueOf(constant.MakeFromLiteral("21", token.INT, 0)),
		"SQLITE_TEXT":                      reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"SQLITE_TIME":                      reflect.ValueOf(constant.MakeFromLiteral("5", token.INT, 0)),
		"SQLITE_TRANSACTION":               reflect.ValueOf(constant.MakeFromLiteral("22", token.INT, 0)),
		"SQLITE_UPDATE":                    reflect.ValueOf(constant.MakeFromLiteral("23", token.INT, 0)),
		"SQLiteTimestampFormats":           reflect.ValueOf(&sqlite3.SQLiteTimestampFormats).Elem(),
		"Version":                          reflect.ValueOf(sqlite3.Version),

		// type definitions
		"ErrNo":               reflect.ValueOf((*sqlite3.ErrNo)(nil)),
		"ErrNoExtended":       reflect.ValueOf((*sqlite3.ErrNoExtended)(nil)),
		"Error":               reflect.ValueOf((*sqlite3.Error)(nil)),
		"SQLiteBackup":        reflect.ValueOf((*sqlite3.SQLiteBackup)(nil)),
		"SQLiteConn":          reflect.ValueOf((*sqlite3.SQLiteConn)(nil)),
		"SQLiteContext":       reflect.ValueOf((*sqlite3.SQLiteContext)(nil)),
		"SQLiteDriver":        reflect.ValueOf((*sqlite3.SQLiteDriver)(nil)),
		"SQLitePreUpdateData": reflect.ValueOf((*sqlite3.SQLitePreUpdateData)(nil)),
		"SQLiteResult":        reflect.ValueOf((*sqlite3.SQLiteResult)(nil)),
		"SQLiteRows":          reflect.ValueOf((*sqlite3.SQLiteRows)(nil)),
		"SQLiteStmt":          reflect.ValueOf((*sqlite3.SQLiteStmt)(nil)),
		"SQLiteTx":            reflect.ValueOf((*sqlite3.SQLiteTx)(nil)),
	}
}
