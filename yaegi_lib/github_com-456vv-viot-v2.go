// Code generated by 'yaegi extract github.com/456vv/viot/v2'. DO NOT EDIT.

//go:build yaegi_lib
// +build yaegi_lib

package yaegi_lib

import (
	"bufio"
	"context"
	"github.com/456vv/viot/v2"
	"github.com/456vv/vmap/v2"
	"github.com/456vv/vweb/v2"
	"go/constant"
	"go/token"
	"io"
	"net"
	"reflect"
	"time"
)

func init() {
	Symbols["github.com/456vv/viot/v2/viot"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"DefaultLineBytes":      reflect.ValueOf(constant.MakeFromLiteral("1048576", token.INT, 0)),
		"DefaultSitePool":       reflect.ValueOf(&viot.DefaultSitePool).Elem(),
		"ErrAbortHandler":       reflect.ValueOf(&viot.ErrAbortHandler).Elem(),
		"ErrBodyNotAllowed":     reflect.ValueOf(&viot.ErrBodyNotAllowed).Elem(),
		"ErrConnClose":          reflect.ValueOf(&viot.ErrConnClose).Elem(),
		"ErrDoned":              reflect.ValueOf(&viot.ErrDoned).Elem(),
		"ErrGetBodyed":          reflect.ValueOf(&viot.ErrGetBodyed).Elem(),
		"ErrHijacked":           reflect.ValueOf(&viot.ErrHijacked).Elem(),
		"ErrHostInvalid":        reflect.ValueOf(&viot.ErrHostInvalid).Elem(),
		"ErrLaunched":           reflect.ValueOf(&viot.ErrLaunched).Elem(),
		"ErrMethodInvalid":      reflect.ValueOf(&viot.ErrMethodInvalid).Elem(),
		"ErrProtoInvalid":       reflect.ValueOf(&viot.ErrProtoInvalid).Elem(),
		"ErrReqUnavailable":     reflect.ValueOf(&viot.ErrReqUnavailable).Elem(),
		"ErrRespUnavailable":    reflect.ValueOf(&viot.ErrRespUnavailable).Elem(),
		"ErrRwaControl":         reflect.ValueOf(&viot.ErrRwaControl).Elem(),
		"ErrServerClosed":       reflect.ValueOf(&viot.ErrServerClosed).Elem(),
		"ErrURIInvalid":         reflect.ValueOf(&viot.ErrURIInvalid).Elem(),
		"Error":                 reflect.ValueOf(viot.Error),
		"LocalAddrContextKey":   reflect.ValueOf(&viot.LocalAddrContextKey).Elem(),
		"LogDebug":              reflect.ValueOf(viot.LogDebug),
		"LogErr":                reflect.ValueOf(viot.LogErr),
		"LogNone":               reflect.ValueOf(viot.LogNone),
		"NewRequest":            reflect.ValueOf(viot.NewRequest),
		"NewRequestWithContext": reflect.ValueOf(viot.NewRequestWithContext),
		"NewSitePool":           reflect.ValueOf(viot.NewSitePool),
		"Nonce":                 reflect.ValueOf(viot.Nonce),
		"ParseIOTVersion":       reflect.ValueOf(viot.ParseIOTVersion),
		"ReadRequest":           reflect.ValueOf(viot.ReadRequest),
		"ReadResponse":          reflect.ValueOf(viot.ReadResponse),
		"ServerContextKey":      reflect.ValueOf(&viot.ServerContextKey).Elem(),
		"StateActive":           reflect.ValueOf(viot.StateActive),
		"StateClosed":           reflect.ValueOf(viot.StateClosed),
		"StateHijacked":         reflect.ValueOf(viot.StateHijacked),
		"StateIdle":             reflect.ValueOf(viot.StateIdle),
		"StateNew":              reflect.ValueOf(viot.StateNew),

		// type definitions
		"Client":               reflect.ValueOf((*viot.Client)(nil)),
		"CloseNotifier":        reflect.ValueOf((*viot.CloseNotifier)(nil)),
		"ConnState":            reflect.ValueOf((*viot.ConnState)(nil)),
		"DotContexter":         reflect.ValueOf((*viot.DotContexter)(nil)),
		"DynamicTemplateFunc":  reflect.ValueOf((*viot.DynamicTemplateFunc)(nil)),
		"DynamicTemplater":     reflect.ValueOf((*viot.DynamicTemplater)(nil)),
		"Flusher":              reflect.ValueOf((*viot.Flusher)(nil)),
		"Globaler":             reflect.ValueOf((*viot.Globaler)(nil)),
		"Handler":              reflect.ValueOf((*viot.Handler)(nil)),
		"HandlerFunc":          reflect.ValueOf((*viot.HandlerFunc)(nil)),
		"Header":               reflect.ValueOf((*viot.Header)(nil)),
		"Hijacker":             reflect.ValueOf((*viot.Hijacker)(nil)),
		"Launcher":             reflect.ValueOf((*viot.Launcher)(nil)),
		"LogLevel":             reflect.ValueOf((*viot.LogLevel)(nil)),
		"RawControler":         reflect.ValueOf((*viot.RawControler)(nil)),
		"Request":              reflect.ValueOf((*viot.Request)(nil)),
		"RequestConfig":        reflect.ValueOf((*viot.RequestConfig)(nil)),
		"Response":             reflect.ValueOf((*viot.Response)(nil)),
		"ResponseConfig":       reflect.ValueOf((*viot.ResponseConfig)(nil)),
		"ResponseWriter":       reflect.ValueOf((*viot.ResponseWriter)(nil)),
		"RoundTripper":         reflect.ValueOf((*viot.RoundTripper)(nil)),
		"Route":                reflect.ValueOf((*viot.Route)(nil)),
		"Server":               reflect.ValueOf((*viot.Server)(nil)),
		"ServerHandlerDynamic": reflect.ValueOf((*viot.ServerHandlerDynamic)(nil)),
		"Session":              reflect.ValueOf((*viot.Session)(nil)),
		"Sessioner":            reflect.ValueOf((*viot.Sessioner)(nil)),
		"Sessions":             reflect.ValueOf((*viot.Sessions)(nil)),
		"Site":                 reflect.ValueOf((*viot.Site)(nil)),
		"SiteMan":              reflect.ValueOf((*viot.SiteMan)(nil)),
		"SitePool":             reflect.ValueOf((*viot.SitePool)(nil)),
		"TemplateDot":          reflect.ValueOf((*viot.TemplateDot)(nil)),
		"TemplateDoter":        reflect.ValueOf((*viot.TemplateDoter)(nil)),

		// interface wrapper definitions
		"_CloseNotifier":    reflect.ValueOf((*_github_com_456vv_viot_v2_CloseNotifier)(nil)),
		"_DotContexter":     reflect.ValueOf((*_github_com_456vv_viot_v2_DotContexter)(nil)),
		"_DynamicTemplater": reflect.ValueOf((*_github_com_456vv_viot_v2_DynamicTemplater)(nil)),
		"_Flusher":          reflect.ValueOf((*_github_com_456vv_viot_v2_Flusher)(nil)),
		"_Globaler":         reflect.ValueOf((*_github_com_456vv_viot_v2_Globaler)(nil)),
		"_Handler":          reflect.ValueOf((*_github_com_456vv_viot_v2_Handler)(nil)),
		"_Hijacker":         reflect.ValueOf((*_github_com_456vv_viot_v2_Hijacker)(nil)),
		"_Launcher":         reflect.ValueOf((*_github_com_456vv_viot_v2_Launcher)(nil)),
		"_RawControler":     reflect.ValueOf((*_github_com_456vv_viot_v2_RawControler)(nil)),
		"_ResponseWriter":   reflect.ValueOf((*_github_com_456vv_viot_v2_ResponseWriter)(nil)),
		"_RoundTripper":     reflect.ValueOf((*_github_com_456vv_viot_v2_RoundTripper)(nil)),
		"_Sessioner":        reflect.ValueOf((*_github_com_456vv_viot_v2_Sessioner)(nil)),
		"_TemplateDoter":    reflect.ValueOf((*_github_com_456vv_viot_v2_TemplateDoter)(nil)),
	}
}

// _github_com_456vv_viot_v2_CloseNotifier is an interface wrapper for CloseNotifier type
type _github_com_456vv_viot_v2_CloseNotifier struct {
	IValue       interface{}
	WCloseNotify func() <-chan error
}

func (W _github_com_456vv_viot_v2_CloseNotifier) CloseNotify() <-chan error {
	return W.WCloseNotify()
}

// _github_com_456vv_viot_v2_DotContexter is an interface wrapper for DotContexter type
type _github_com_456vv_viot_v2_DotContexter struct {
	IValue       interface{}
	WContext     func() context.Context
	WWithContext func(ctx context.Context)
}

func (W _github_com_456vv_viot_v2_DotContexter) Context() context.Context {
	return W.WContext()
}
func (W _github_com_456vv_viot_v2_DotContexter) WithContext(ctx context.Context) {
	W.WWithContext(ctx)
}

// _github_com_456vv_viot_v2_DynamicTemplater is an interface wrapper for DynamicTemplater type
type _github_com_456vv_viot_v2_DynamicTemplater struct {
	IValue   interface{}
	WExecute func(out io.Writer, dot interface{}) error
	WParse   func(r io.Reader) (err error)
	WSetPath func(rootPath string, pagePath string)
}

func (W _github_com_456vv_viot_v2_DynamicTemplater) Execute(out io.Writer, dot interface{}) error {
	return W.WExecute(out, dot)
}
func (W _github_com_456vv_viot_v2_DynamicTemplater) Parse(r io.Reader) (err error) {
	return W.WParse(r)
}
func (W _github_com_456vv_viot_v2_DynamicTemplater) SetPath(rootPath string, pagePath string) {
	W.WSetPath(rootPath, pagePath)
}

// _github_com_456vv_viot_v2_Flusher is an interface wrapper for Flusher type
type _github_com_456vv_viot_v2_Flusher struct {
	IValue interface{}
	WFlush func()
}

func (W _github_com_456vv_viot_v2_Flusher) Flush() {
	W.WFlush()
}

// _github_com_456vv_viot_v2_Globaler is an interface wrapper for Globaler type
type _github_com_456vv_viot_v2_Globaler struct {
	IValue          interface{}
	WDel            func(key interface{})
	WGet            func(key interface{}) interface{}
	WHas            func(key interface{}) bool
	WReset          func()
	WSet            func(key interface{}, val interface{})
	WSetExpired     func(key interface{}, d time.Duration)
	WSetExpiredCall func(key interface{}, d time.Duration, f func(interface{}))
}

func (W _github_com_456vv_viot_v2_Globaler) Del(key interface{}) {
	W.WDel(key)
}
func (W _github_com_456vv_viot_v2_Globaler) Get(key interface{}) interface{} {
	return W.WGet(key)
}
func (W _github_com_456vv_viot_v2_Globaler) Has(key interface{}) bool {
	return W.WHas(key)
}
func (W _github_com_456vv_viot_v2_Globaler) Reset() {
	W.WReset()
}
func (W _github_com_456vv_viot_v2_Globaler) Set(key interface{}, val interface{}) {
	W.WSet(key, val)
}
func (W _github_com_456vv_viot_v2_Globaler) SetExpired(key interface{}, d time.Duration) {
	W.WSetExpired(key, d)
}
func (W _github_com_456vv_viot_v2_Globaler) SetExpiredCall(key interface{}, d time.Duration, f func(interface{})) {
	W.WSetExpiredCall(key, d, f)
}

// _github_com_456vv_viot_v2_Handler is an interface wrapper for Handler type
type _github_com_456vv_viot_v2_Handler struct {
	IValue    interface{}
	WServeIOT func(a0 viot.ResponseWriter, a1 *viot.Request)
}

func (W _github_com_456vv_viot_v2_Handler) ServeIOT(a0 viot.ResponseWriter, a1 *viot.Request) {
	W.WServeIOT(a0, a1)
}

// _github_com_456vv_viot_v2_Hijacker is an interface wrapper for Hijacker type
type _github_com_456vv_viot_v2_Hijacker struct {
	IValue  interface{}
	WHijack func() (net.Conn, *bufio.ReadWriter, error)
}

func (W _github_com_456vv_viot_v2_Hijacker) Hijack() (net.Conn, *bufio.ReadWriter, error) {
	return W.WHijack()
}

// _github_com_456vv_viot_v2_Launcher is an interface wrapper for Launcher type
type _github_com_456vv_viot_v2_Launcher struct {
	IValue  interface{}
	WLaunch func() viot.RoundTripper
}

func (W _github_com_456vv_viot_v2_Launcher) Launch() viot.RoundTripper {
	return W.WLaunch()
}

// _github_com_456vv_viot_v2_RawControler is an interface wrapper for RawControler type
type _github_com_456vv_viot_v2_RawControler struct {
	IValue      interface{}
	WRawControl func(f func(net.Conn, *bufio.Reader) error)
}

func (W _github_com_456vv_viot_v2_RawControler) RawControl(f func(net.Conn, *bufio.Reader) error) {
	W.WRawControl(f)
}

// _github_com_456vv_viot_v2_ResponseWriter is an interface wrapper for ResponseWriter type
type _github_com_456vv_viot_v2_ResponseWriter struct {
	IValue   interface{}
	WHeader  func() viot.Header
	WSetBody func(a0 interface{}) error
	WStatus  func(a0 int)
}

func (W _github_com_456vv_viot_v2_ResponseWriter) Header() viot.Header {
	return W.WHeader()
}
func (W _github_com_456vv_viot_v2_ResponseWriter) SetBody(a0 interface{}) error {
	return W.WSetBody(a0)
}
func (W _github_com_456vv_viot_v2_ResponseWriter) Status(a0 int) {
	W.WStatus(a0)
}

// _github_com_456vv_viot_v2_RoundTripper is an interface wrapper for RoundTripper type
type _github_com_456vv_viot_v2_RoundTripper struct {
	IValue            interface{}
	WRoundTrip        func(a0 *viot.Request) (*viot.Response, error)
	WRoundTripContext func(ctx context.Context, req *viot.Request) (resp *viot.Response, err error)
}

func (W _github_com_456vv_viot_v2_RoundTripper) RoundTrip(a0 *viot.Request) (*viot.Response, error) {
	return W.WRoundTrip(a0)
}
func (W _github_com_456vv_viot_v2_RoundTripper) RoundTripContext(ctx context.Context, req *viot.Request) (resp *viot.Response, err error) {
	return W.WRoundTripContext(ctx, req)
}

// _github_com_456vv_viot_v2_Sessioner is an interface wrapper for Sessioner type
type _github_com_456vv_viot_v2_Sessioner struct {
	IValue          interface{}
	WDefer          func(call interface{}, args ...interface{}) error
	WDel            func(key interface{})
	WFree           func()
	WGet            func(key interface{}) interface{}
	WGetHas         func(key interface{}) (val interface{}, ok bool)
	WHas            func(key interface{}) bool
	WReset          func()
	WSet            func(key interface{}, val interface{})
	WSetExpired     func(key interface{}, d time.Duration)
	WSetExpiredCall func(key interface{}, d time.Duration, f func(interface{}))
	WToken          func() string
}

func (W _github_com_456vv_viot_v2_Sessioner) Defer(call interface{}, args ...interface{}) error {
	return W.WDefer(call, args...)
}
func (W _github_com_456vv_viot_v2_Sessioner) Del(key interface{}) {
	W.WDel(key)
}
func (W _github_com_456vv_viot_v2_Sessioner) Free() {
	W.WFree()
}
func (W _github_com_456vv_viot_v2_Sessioner) Get(key interface{}) interface{} {
	return W.WGet(key)
}
func (W _github_com_456vv_viot_v2_Sessioner) GetHas(key interface{}) (val interface{}, ok bool) {
	return W.WGetHas(key)
}
func (W _github_com_456vv_viot_v2_Sessioner) Has(key interface{}) bool {
	return W.WHas(key)
}
func (W _github_com_456vv_viot_v2_Sessioner) Reset() {
	W.WReset()
}
func (W _github_com_456vv_viot_v2_Sessioner) Set(key interface{}, val interface{}) {
	W.WSet(key, val)
}
func (W _github_com_456vv_viot_v2_Sessioner) SetExpired(key interface{}, d time.Duration) {
	W.WSetExpired(key, d)
}
func (W _github_com_456vv_viot_v2_Sessioner) SetExpiredCall(key interface{}, d time.Duration, f func(interface{})) {
	W.WSetExpiredCall(key, d, f)
}
func (W _github_com_456vv_viot_v2_Sessioner) Token() string {
	return W.WToken()
}

// _github_com_456vv_viot_v2_TemplateDoter is an interface wrapper for TemplateDoter type
type _github_com_456vv_viot_v2_TemplateDoter struct {
	IValue          interface{}
	WContext        func() context.Context
	WDefer          func(call interface{}, args ...interface{}) error
	WGlobal         func() vweb.Globaler
	WHeader         func() viot.Header
	WHijack         func() (net.Conn, *bufio.ReadWriter, error)
	WLaunch         func() viot.RoundTripper
	WRequest        func() *viot.Request
	WResponseWriter func() viot.ResponseWriter
	WRootDir        func(path string) string
	WSession        func(token string) vweb.Sessioner
	WSwap           func() *vmap.Map
	WWithContext    func(ctx context.Context)
}

func (W _github_com_456vv_viot_v2_TemplateDoter) Context() context.Context {
	return W.WContext()
}
func (W _github_com_456vv_viot_v2_TemplateDoter) Defer(call interface{}, args ...interface{}) error {
	return W.WDefer(call, args...)
}
func (W _github_com_456vv_viot_v2_TemplateDoter) Global() vweb.Globaler {
	return W.WGlobal()
}
func (W _github_com_456vv_viot_v2_TemplateDoter) Header() viot.Header {
	return W.WHeader()
}
func (W _github_com_456vv_viot_v2_TemplateDoter) Hijack() (net.Conn, *bufio.ReadWriter, error) {
	return W.WHijack()
}
func (W _github_com_456vv_viot_v2_TemplateDoter) Launch() viot.RoundTripper {
	return W.WLaunch()
}
func (W _github_com_456vv_viot_v2_TemplateDoter) Request() *viot.Request {
	return W.WRequest()
}
func (W _github_com_456vv_viot_v2_TemplateDoter) ResponseWriter() viot.ResponseWriter {
	return W.WResponseWriter()
}
func (W _github_com_456vv_viot_v2_TemplateDoter) RootDir(path string) string {
	return W.WRootDir(path)
}
func (W _github_com_456vv_viot_v2_TemplateDoter) Session(token string) vweb.Sessioner {
	return W.WSession(token)
}
func (W _github_com_456vv_viot_v2_TemplateDoter) Swap() *vmap.Map {
	return W.WSwap()
}
func (W _github_com_456vv_viot_v2_TemplateDoter) WithContext(ctx context.Context) {
	W.WWithContext(ctx)
}
